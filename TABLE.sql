CREATE DATABASE draft1


BEGIN TRAN TR1
CREATE TABLE QUARTER 
(
QuarterID INT PRIMARY KEY IDENTITY(1,1),
QuarterName VARCHAR(20) NOT NULL,
QuarterDescr VARCHAR(200) NULL
)


CREATE TABLE INSTRUCTOR
(
InstructorID INT PRIMARY KEY IDENTITY(1,1),
InstructorFName VARCHAR(50) NOT NULL,
InstructorLName VARCHAR(50) NOT NULL,
)



CREATE TABLE RATING
(
RatingID INT PRIMARY KEY IDENTITY(1,1),
RatingA FLOAT NOT NULL,
RatingB FLOAT NOT NULL,
RatingC FLOAT NOT NULL,
ReviewDescr VARCHAR(1000) NULL
)

CREATE TABLE SCHOOL
(
SchoolID INT PRIMARY KEY IDENTITY(1,1)  NOT NULL,
SchoolName VARCHAR(80) NOT NULL UNIQUE,
SchoolDescr VARCHAR(200) NULL
)

CREATE TABLE LOGIN
(
LoginID INT PRIMARY KEY IDENTITY(1,1),
LoginName VARCHAR(70) NOT NULL,
LoginPassward VARCHAR(70) NOT NULL,
LoginReminder VARCHAR(70)
)

CREATE TABLE DEPARTMENT 
(
DeptID INT PRIMARY KEY IDENTITY(1,1),
SchoolID INT FOREIGN KEY REFERENCES SCHOOL(SchoolID) NOT NULL,
DeptName VARCHAR(100) NOT NULL,
DeptFullName VARCHAR(10) NULL
)


CREATE TABLE COURSE
(
CourseID INT PRIMARY KEY IDENTITY(1,1),
DeptID INT FOREIGN KEY REFERENCES DEPARTMENT(DeptID),
CourseName VARCHAR(100) NOT NULL
)

CREATE TABLE STUDENT
(
StudentID INT PRIMARY KEY IDENTITY(1,1),
LoginID INT FOREIGN KEY REFERENCES LOGIN(LoginID) NOT NULL,
StudentFNmae VARCHAR(50) NOT NULL,
StudentLName VARCHAR(50) NOT NULL
)


CREATE TABLE CLASS
(
ClassID INT PRIMARY KEY IDENTITY(1,1),
CourseID INT FOREIGN KEY REFERENCES COURSE(CourseID) NOT NULL,
QuarterID INT FOREIGN KEY REFERENCES QUARTER(QuarterID) NOT NULL
)

CREATE TABLE SECTION
(
SectionID INT PRIMARY KEY IDENTITY(1,1),
ClassID INT FOREIGN KEY REFERENCES CLASS(ClassID)NOT NULL,
InstructorID INT FOREIGN KEY REFERENCES INSTRUCTOR(InstructorID) NOT NULL,
Section VARCHAR(3) not null, 
YEAR DATE NOT NULL

)

CREATE TABLE REVIEW 
(
ReviewID INT PRIMARY KEY IDENTITY(1,1),
RatingID INT FOREIGN KEY REFERENCES RATING(RatingID) NOT NULL,
StudentID INT FOREIGN KEY REFERENCES STUDENT(StudentID) NOT NULL,
SectionID INT FOREIGN KEY REFERENCES SECTION(SectionID) NOT NULL,
DateTi DATETIME NOT NULL
)

IF @@ERROR <> 0
	ROLLBACK TRAN TR1
ELSE
	COMMIT TRAN TR1 